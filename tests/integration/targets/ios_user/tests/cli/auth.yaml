---
- block:

    - name: Create user with password
      cisco.ios.ios_user:
        name: auth_user
        privilege: 15
        role: network-operator
        state: present
        provider: '{{ cli }}'
        configured_password: pass123

    - name: test login
      expect:
        command: ssh auth_user@{{ ansible_ssh_host }} -p {{ ansible_ssh_port|default(22)
          }} -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PubkeyAuthentication=no
          show version
        responses:
          (?i)password: pass123

    - name: test login with invalid password (should fail)
      expect:
        command: ssh auth_user@{{ ansible_ssh_host }} -p {{ ansible_ssh_port|default(22)
          }} -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PubkeyAuthentication=no
          show version
        responses:
          (?i)password: badpass
      ignore_errors: true
      register: results

    - name: check that attempt failed
      assert:
        that:
          - results.failed
  always:

    - name: delete user
      register: result
      cisco.ios.ios_user:
        name: auth_user
        state: absent
        provider: '{{ cli }}'

    - name: reset connection
      meta: reset_connection

- block:

    - name: Ensure ssh key is not world readable
      file:
        path: '{{ role_path }}/files/test_rsa'
        mode: 384

    - name: Create user with sshkey
      cisco.ios.ios_user:
        name: ssh_user
        privilege: 15
        role: network-operator
        state: present
        provider: '{{ cli }}'
        sshkey: "{{ lookup('file', 'files/test_rsa.pub') }}"

    - name: reset connection with {{ ansible_user }
      meta: reset_connection

    - name: test sshkey login for {{ ansible_user }} user
      cisco.ios.ios_command:
        commands:
          - show version
      vars:
        ansible_user: ssh_user
        ansible_private_key_file: "{{ role_path }}/files/test_rsa"

    - name: reset connection with {{ ansible_user }}
      meta: reset_connection

    - name: test with {{ ansible_user }} user without keys
      cisco.ios.ios_command:
        commands:
          - show version
      ignore_errors: true
      register: results
      vars:
        ansible_user: ssh_user
        ansible_private_key_file: ""

    - name: check that attempt failed
      assert:
        that:
          - results.failed
  always:

    - name: delete user
      register: result
      cisco.ios.ios_user:
        name: ssh_user
        state: absent
        provider: '{{ cli }}'

    - name: reset connection
      meta: reset_connection
